setwd("~/GitHub/BSRS")
# Nationality
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2) +
coord_flip()
# Get important libraries
source('~/GitHub/BSRS/preprocess.R')
install.packages('gcookbook')
source('~/GitHub/BSRS/preprocess.R')
source('~/GitHub/BSRS/preprocess.R')
source('~/GitHub/BSRS/preprocess.R')
ggplot(D_eqOpp, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2) +
coord_flip()
View(D_lang)
'this is a string'
c('A', 'B', 'C')
mew <- c('A', 'B', 'C')
mew[1]
mew[2]
mew[3]
mew[4]
mew[5]
mew[6]
mew[0]
mew[-1]
mew[-2]
mew[-3]
mew[-5]
mew[-4]
Q
D
View(D)
source('~/GitHub/BSRS/preprocess.R')
source('~/GitHub/BSRS/preprocess.R')
View(D)
source('~/GitHub/BSRS/preprocess.R')
View(D)
source('~/GitHub/BSRS/preprocess.R')
# Read table
D <- read.csv(file='Responses_raw.csv', header=FALSE, col.names=Q, stringsAsFactors=FALSE)
D
View(D)
D <- read.delim(file='Responses_raw.txt', header=FALSE, col.names=Q, stringsAsFactors=FALSE)
D
View(D)
View(D)
source('~/GitHub/BSRS/preprocess.R')
D_class
D_numeric
View(Dq)
Dq_sum
View(Dq_sum)
D_nat
D_lang
D_nat
# Nationality
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2) +
coord_flip()
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=1) +
coord_flip()
# Nationality
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2) +
coord_flip()
ggplot(D_nat, aes(x=Question, y=mean))
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue')
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2)
ggplot(D_nat, aes(x=Question, y=mean)) +
geom_bar(stat="identity", colour='black', fill='lightblue') +
geom_errorbar(aes(ymin=mean-std, ymax=mean+std), width=.2) +
coord_flip()
D$Satisfaction_Work[D$Satisfaction_Work == 5] = NA;
View(D)
data(iris)
iris
View(iris)
D[['Satisfaction_Work']]
D[['Satisfaction_Safety']]
D[['Satisfaction_Safety']][D[['Satisfaction_Safety']]=4]
D[['Satisfaction_Safety']D[['Satisfaction_Safety']]=4]
D[['Satisfaction_Safety']]
D[['Satisfaction_Safety']] == 5
D[['Satisfaction_Safety']][D[['Satisfaction_Safety']]==4]
D[['Satisfaction_Safety']][D[['Satisfaction_Safety']]==2]
D[['Satisfaction_Safety']][D[['Satisfaction_Safety']]==2] = NA
D[['Satisfaction_Safety']]
D[['Satisfaction']][D[['Satisfaction']]==11] = NA
clean5s <- c('Satisfaction_Work',
'Satisfaction_Safety',
'Satisfaction_Home',
'Satisfaction_Family',
'Satisfaction_Material',
'Satisfaction_Friends',
'Agree_FutureHope',
'Agree_NotRecognised',
'Agree_SecondClassCitizen',
'Agree_DefendInterests',
'Agree_LookFromAbove',
'Agree_NoInfluence',
'EqualOpp_Work',
'EqualOpp_StateWork',
'EqualOpp_HeadWork',
'EqualOpp_Business',
'EqualOpp_Politics',
'EqualOpp_Education',
'EqualOpp_StartUp',
'EqualOpp_Pay',
'EqualOpp_Benefit')
for (c in clean5s) {
D[[c]][D[[c]]==5] = NA
}
View(D)
cleanTrue = c('ChildSchool_State',
'ChildSchool_Immersion',
'ChildSchool_Mixed',
'ChildSchool_Bilingual',
'ChildSchool_Russian',
'ChildSchool_Foreign',
'ChildSchool_None',
'ChildSchool_NotSure')
for (c in clean5s) {
D[[c]][is.na(D[[c]])] = FALSE
D[[c]][!is.na(D[[c]])] = TRUE
}
View(D)
cleanTrue = c('ChildSchool_State',
'ChildSchool_Immersion',
'ChildSchool_Mixed',
'ChildSchool_Bilingual',
'ChildSchool_Russian',
'ChildSchool_Foreign',
'ChildSchool_None',
'ChildSchool_NotSure')
for (c in cleanTrue) {
D[[c]][is.na(D[[c]])] = FALSE
D[[c]][!is.na(D[[c]])] = TRUE
D[[c]] = as.logical(D[[c]])
}
View(D)
source.with.encoding('~/GitHub/BSRS/preprocess.R', encoding='UTF-8')
source.with.encoding('~/GitHub/BSRS/preprocess.R', encoding='UTF-8')
source('~/GitHub/BSRS/preprocess.R')
View(D)
source('~/GitHub/BSRS/preprocess.R')
View(D)
source('~/GitHub/BSRS/preprocess.R')
View(D)
a=pbeta(seq(from=0,to=1,by=0.05),2,1)
plot(a)
y=seq(from=0,to=1,by=0.05)
plot(y,a)
pbeta(0.75,2,1)-pbeta(0.5,2,1)
qbeta(0.5,2,1)
pbeta(0.7,2,1)
