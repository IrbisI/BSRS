scope <- paste('~', paste(c(sat_Factors, equ_Factors), collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope, )
min.model <- lm(NationalityScore ~ 1, data = D)
scope <- paste('~', paste(c(equ_Factors), collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
min.model <- lm(NationalityScore ~ 1, data = D)
scope <- paste('~', paste(c(sat_Factors, agr_Factors, equ_Factors), collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
min.model <- lm(NationalityScore ~ 1, data = na.omit(D))
min.model
summary(min.model)
plot(min.model)
mew = na.omit(D)
View(mew)
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
min.model <- lm(NationalityScore ~ 1, data = na.omit(D[, lm.factors]))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
mew <- na.omit(D[, lm.factors])
min.model
summary(min.model)
Dsub <- D[, lm.factors]
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
plot(min.model)
summary(min.model)
Dsub <- D[, lm.factors]
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
Dsub <- D[, lm.factors]
lm.factors <- c('NationalityScore', sat_Factors, agr_Factors, equ_Factors)
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
lm.factors <- c('NationalityScore', sat_Factors, agr_Factors, equ_Factors)
Dsub <- D[, lm.factors]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
summary(fwd.model)
fwd.model <- step(min.model, direction="forward", scope=scope)
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
Dsub <- D[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(min.model, direction="backward")
bck.model <- step(full.model, direction="backward")
summary(bck.model)
fwd.model
PCA(D_sub[, sat_Factors])
summary(bck.model)
D_sub <- D[, agr_Factors]
corrAll(D_sub, "Correlate Appraisal")
corrAll(D[, agr_Factors], "Correlate Appraisal")
corrAll(D[, imp_Factors], 'Correlate Importance')
PCA(D_sub[, imp_Factors]))
PCA(D_sub[, imp_Factors])
imp_Factors
PCA(D[, imp_Factors])
mew <- drop.na(D[, imp_Factors])
mew <- na.drop(D[, imp_Factors])
mew <- na.omit(D[, imp_Factors])
View(mew)
imp_Factors <- c('ImportanceState_NameFamily',
'ImportanceState_Citizenship',
'ImportanceState_Language',
'ImportanceState_Friends',
'ImportanceState_School',
'ImportanceState_Behaviour')
PCA(D[, imp_Factors])
PCA(D[, equ_Factors])
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCA = function(df) {
for(i in c(1:ncol(df))) {
df[,i] <- as.numeric(df[,i])
}
fit <- princomp(na.omit(df),
center = TRUE, scale = TRUE,
cor = FALSE) # Use Covariance matrix, not Correlation
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit, type="lines") # scree plot
fit$scores # the principal components
PCbiplot(fit)
}
PCA(D[, equ_Factors])
library(ggbiplot)
install.packages('ggbiplot')
library(ggbiplot)
library(ggbiplot)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
# Princial Component Analysis function
PCA = function(df) {
for(i in c(1:ncol(df))) {
df[,i] <- as.numeric(df[,i])
}
fit <- princomp(na.omit(df),
center = TRUE, scale = TRUE,
cor = FALSE) # Use Covariance matrix, not Correlation
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit, type="lines") # scree plot
fit$scores # the principal components
ggbiplot(fit)
}
PCA(D[, equ_Factors])
ggbiplot(fit) + theme_bw()
PCA = function(df) {
for(i in c(1:ncol(df))) {
df[,i] <- as.numeric(df[,i])
}
fit <- princomp(na.omit(df),
center = TRUE, scale = TRUE,
cor = FALSE) # Use Covariance matrix, not Correlation
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit, type="lines") # scree plot
fit$scores # the principal components
ggbiplot(fit) + theme_bw()
}
PCA(D[, equ_Factors])
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
# Satisfaction
PCA(D[, sat_Factors], 'PCA_satFactors.png')
# Importance
PCA(D[, imp_Factors], 'PCA_impFactors.png')
# Equality
PCA(D[, equ_Factors], 'PCA_equFactors.png')
corrAll(D[ ,
c('Age',
'Gender',
'TimeInCountry',
'Satisfaction',
sat_Factors,
equ_Factors)], "Correlate various")
# correlogram function
corrAll <- function(df, graphTitle, fileName=NULL) {
if (!is.null(fileName)) {
png(file.path('graphs', fileName),
width     = 8,
height    = 6,
units     = "in",
res       = 300)
}
corrgram(df,
order=TRUE, lower.panel=panel.conf,
upper.panel=panel.pie, text.panel=panel.txt,
main = graphTitle)
if (!is.null(fileName)) {
dev.off()
}
}
corrAll(D[ ,
c('Age',
'Gender',
'TimeInCountry',
'Satisfaction',
sat_Factors,
equ_Factors)], "Correlate various",
'corrVarious.png')
corrAll <- function(df, graphTitle, fileName=NULL) {
if (!is.null(fileName)) {
png(file.path('graphs', fileName),
width     = 8,
height    = 8,
units     = "in",
res       = 300)
}
corrgram(df,
order=TRUE, lower.panel=panel.conf,
upper.panel=panel.pie, text.panel=panel.txt,
main = graphTitle)
if (!is.null(fileName)) {
dev.off()
}
}
corrAll(D[ ,
c('Age',
'Gender',
'TimeInCountry',
'Satisfaction',
sat_Factors,
equ_Factors)], "Correlate various",
'corrVarious.png')
PCA(D[, agr_Factors], 'PCA_agrFactors.png')
# Correlation between overall satisfaction and subtypes
corrAll(D[, sat_Factors], "Correlate Satisfaction",
"corr_Satisfaction.png")
corrAll(D[, agr_Factors], "Correlate Appraisal",
"corr_Appraisal.png")
corrAll(D[, imp_Factors], 'Correlate Importance',
"corr_Importance")
corrAll(D[, equ_Factors], 'Correlate Equality',
"corr_Equality")
corrAll(D[, imp_Factors], 'Correlate Importance',
"corr_Importance.png")
corrAll(D[, equ_Factors], 'Correlate Equality',
"corr_Equality.png")
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
Dsub <- D[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(fwd.model)
summary(bwd.model)
summary(bck.model)
lm.factors <- c(sat_Factors) #, agr_Factors, equ_Factors)
Dsub <- D[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(fwd.model)
bck.model
summary(bck.model)
stepModel <- function(df, lm.factors) {
df_subset <- df[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(df_subset))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', sat_Factors)
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
stepModel(D, 'NationalityScore', sat_Factors)
x
intFactor = "NationalityScore"
paste(intFactor, "~ 1")
lm(paste(intFactor, "~ 1"), data = na.omit(dataFrame_subset))
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
sat_Factors
stepModel(D, 'NationalityScore', sat_Factors)
x
dataFrame <- D
intFactor
depFactors <- satFactors
depFactors <- sat_Factors
dataFrame_subset <- dataFrame[, c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(dataFrame_subset))
min.model
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
scope
print(summary(fwd.model))
fwd.model
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
setwd(WD)
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
getwd()
WD
setwd("/Users/sasha/Projects/BSRS")
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
D$EqualOpp_Work
stepModel(D, 'NationalityScore', equ_Factors)
stepModel
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
min.model <- lm(paste(intFactor, "~ 1"), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
View(dataFrame_subset)
intFactor
depFactors
remove(depFactors)
remove(intFactors)
remove(dataFrame)
remove(dataFrame_subset)
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
min.model <- lm(paste(intFactor, "~ 1"), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
dataFrame
intFactor
dataFrame
rem(dataFrame)
rm(dataFrame)
stepModel(D, 'NationalityScore', equ_Factors)
min.model
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(frmla, data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
min.model
paste(intFactor, "~ 1")
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(formula=frmla, data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
data
stepModel(D, 'NationalityScore', equ_Factors)
frmla
I('something')
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(formula=I(frmla), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = I(scope))
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
depFactors <- equ_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
fwdmode
fwd.model
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(bck.model)
summary(fwd.model)
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bwd.model))
print(summary(fwd.model))
print(summary(bck.model))
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- sat_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bwd.model))
print(summary(fwd.model))
depFactors <- sat_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- equ_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- c('Satisfaction_Safety', 'Satisfaction_Friends', 'Satisfaction_Family',
'Agree_DefendInterests', 'EqualOpp_HeadWork')
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
# 'StateLanguage_Satisfaction'
View(D)
View(D)
# 'StateLanguage_Satisfaction'
View(D_inc)
View(D_import)
View(D_cSchool)
View(D)
# 'StateLanguage_Satisfaction'
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages('ggbiplot')
library(devtools)
install_github("vqv/ggbiplot")
library(devtools) install_github("vqv/ggbiplot")
library(devtools)
source('~/GitHub/BSRS/installRequirements.R')
source('~/.active-rstudio-document')
install.packages("plyr")
install.packages("plyr")
source('~/.active-rstudio-document')
install.packages("digest")
source('forwardBackModel.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/.active-rstudio-document')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
install.packages("plyr")
source('~/GitHub/BSRS/DO_ANALYSIS.R')
