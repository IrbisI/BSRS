res       = 300)
}
corrgram(df,
order=TRUE, lower.panel=panel.conf,
upper.panel=panel.pie, text.panel=panel.txt,
main = graphTitle)
if (!is.null(fileName)) {
dev.off()
}
}
corrAll(D[ ,
c('Age',
'Gender',
'TimeInCountry',
'Satisfaction',
sat_Factors,
equ_Factors)], "Correlate various",
'corrVarious.png')
corrAll <- function(df, graphTitle, fileName=NULL) {
if (!is.null(fileName)) {
png(file.path('graphs', fileName),
width     = 8,
height    = 8,
units     = "in",
res       = 300)
}
corrgram(df,
order=TRUE, lower.panel=panel.conf,
upper.panel=panel.pie, text.panel=panel.txt,
main = graphTitle)
if (!is.null(fileName)) {
dev.off()
}
}
corrAll(D[ ,
c('Age',
'Gender',
'TimeInCountry',
'Satisfaction',
sat_Factors,
equ_Factors)], "Correlate various",
'corrVarious.png')
PCA(D[, agr_Factors], 'PCA_agrFactors.png')
# Correlation between overall satisfaction and subtypes
corrAll(D[, sat_Factors], "Correlate Satisfaction",
"corr_Satisfaction.png")
corrAll(D[, agr_Factors], "Correlate Appraisal",
"corr_Appraisal.png")
corrAll(D[, imp_Factors], 'Correlate Importance',
"corr_Importance")
corrAll(D[, equ_Factors], 'Correlate Equality',
"corr_Equality")
corrAll(D[, imp_Factors], 'Correlate Importance',
"corr_Importance.png")
corrAll(D[, equ_Factors], 'Correlate Equality',
"corr_Equality.png")
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
lm.factors <- c(sat_Factors, agr_Factors, equ_Factors)
Dsub <- D[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(fwd.model)
summary(bwd.model)
summary(bck.model)
lm.factors <- c(sat_Factors) #, agr_Factors, equ_Factors)
Dsub <- D[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(Dsub))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope=scope)
full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(fwd.model)
bck.model
summary(bck.model)
stepModel <- function(df, lm.factors) {
df_subset <- df[, c(c('NationalityScore', lm.factors)]
min.model <- lm(NationalityScore ~ 1, data = na.omit(df_subset))
scope <- paste('~', paste(lm.factors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste('NationalityScore ~', paste(lm.factors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel <- function(df, intFactor, depFactors) {
df_subset <- df[, c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(df_subset))
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', sat_Factors)
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
stepModel(D, 'NationalityScore', sat_Factors)
x
intFactor = "NationalityScore"
paste(intFactor, "~ 1")
lm(paste(intFactor, "~ 1"), data = na.omit(dataFrame_subset))
source('~/Projects/BSRS/analysisFunctions.R', echo=TRUE)
sat_Factors
stepModel(D, 'NationalityScore', sat_Factors)
x
dataFrame <- D
intFactor
depFactors <- satFactors
depFactors <- sat_Factors
dataFrame_subset <- dataFrame[, c(intFactor, depFactors)]
min.model <- lm(paste(intFactor, "~ 1"), data = na.omit(dataFrame_subset))
min.model
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
scope
print(summary(fwd.model))
fwd.model
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
setwd(WD)
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
getwd()
WD
setwd("/Users/sasha/Projects/BSRS")
source('~/Projects/BSRS/DO_ANALYSIS.R', echo=TRUE)
D$EqualOpp_Work
stepModel(D, 'NationalityScore', equ_Factors)
stepModel
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
min.model <- lm(paste(intFactor, "~ 1"), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
View(dataFrame_subset)
intFactor
depFactors
remove(depFactors)
remove(intFactors)
remove(dataFrame)
remove(dataFrame_subset)
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
min.model <- lm(paste(intFactor, "~ 1"), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse=' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
dataFrame
intFactor
dataFrame
rem(dataFrame)
rm(dataFrame)
stepModel(D, 'NationalityScore', equ_Factors)
min.model
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(frmla, data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
min.model
paste(intFactor, "~ 1")
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(formula=frmla, data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
data
stepModel(D, 'NationalityScore', equ_Factors)
frmla
I('something')
stepModel <- function(dataFrame, intFactor, depFactors) {
dataFrame_subset <- na.omit(dataFrame[, c(intFactor, depFactors)])
frmla <- paste(intFactor, "~ 1")
min.model <- lm(formula=I(frmla), data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = I(scope))
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
}
stepModel(D, 'NationalityScore', equ_Factors)
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
depFactors <- equ_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
#full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
#bck.model <- step(full.model, direction="backward")
print(summary(fwd.model))
fwd.model
fwdmode
fwd.model
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
summary(bck.model)
summary(fwd.model)
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bwd.model))
print(summary(fwd.model))
print(summary(bck.model))
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- sat_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bwd.model))
print(summary(fwd.model))
depFactors <- sat_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- agr_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- equ_Factors
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
depFactors <- c('Satisfaction_Safety', 'Satisfaction_Friends', 'Satisfaction_Family',
'Agree_DefendInterests', 'EqualOpp_HeadWork')
dataFrame_subset <- na.omit(D[, c('NationalityScore', depFactors)])
min.model <- lm('NationalityScore ~ 1', data = dataFrame_subset)
scope <- paste('~', paste(depFactors, collapse = ' + '))
fwd.model <- step(min.model, direction="forward", scope = scope)
full.model <- lm(paste(intFactor, '~', paste(depFactors, collapse=' + ')), data = na.omit(Dsub))
bck.model <- step(full.model, direction="backward")
print(summary(bck.model))
print(summary(fwd.model))
# 'StateLanguage_Satisfaction'
View(D)
View(D)
# 'StateLanguage_Satisfaction'
View(D_inc)
View(D_import)
View(D_cSchool)
View(D)
# 'StateLanguage_Satisfaction'
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages('ggbiplot')
library(devtools)
install_github("vqv/ggbiplot")
library(devtools) install_github("vqv/ggbiplot")
library(devtools)
source('~/GitHub/BSRS/installRequirements.R')
source('~/.active-rstudio-document')
install.packages("plyr")
install.packages("plyr")
source('~/.active-rstudio-document')
install.packages("digest")
source('forwardBackModel.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/.active-rstudio-document')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
install.packages("plyr")
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
install.packages("digest")
install.packages("plyr")
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
install.packages("plyr")
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/installRequirements.R')
source('~/GitHub/BSRS/installRequirements.R')
install.packages("devtools", dependencies = TRUE)
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('forwardBackModel.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
rm(list = ls())
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
source('~/GitHub/BSRS/DO_ANALYSIS.R')
rm(list = ls())
# Get important libraries
library(tools)
library(ggplot2)     # Grammar of Graphics
library(ggbiplot)
library(colorspace)
library(gcookbook)
library(gdata)
library(stargazer)
library(rattle)
library(corrgram)
library(randomForest)
library(inTrees)
library(rpart.plot)
library(RColorBrewer)
#### Remove graphs and tables before running analysis
WD <- getwd()
unlink(file.path(WD, 'tables', '*'))
unlink(file.path(WD, 'graphs', '*'))
#### Prepare analysis ####
# Run data analysis step by step
source('SurveyQuestions.R')
source('QuestionGroups.R')
source('ReadData.R')
source('BasicClean.R')
source('SimpleStats.R')
# Define analysis parameters
binWidth <- 3 # Binwidth for histograms
randomSeed <- 208
studyLoc <- c('Estonia', 'Finland')
# Nationality text parse
fit <- aov(Satisfaction ~ IncomeLevel * Country, data=D)
summary(fit)
View(D)
fit <- aov(Satisfaction ~ IncomeFactor * Country, data=D)
D[D["IncomeLevel"] != 'High']
D[D["IncomeLevel"] != 'High', D["IncomeLevel"]]
D[D["IncomeLevel"] != 'High', "IncomeLevel"]
fit <- aov(Satisfaction ~ IncomeLevel * Country, data=D[D["IncomeLevel"] != 'High', ])
summary(fit)
fit <- aov(Satisfaction ~ Country + IncomePersonal, data=D)
summary(fit)
fit <- aov(Satisfaction ~ Country * IncomePersonal, data=D)
summary(fit)
fit <- aov(Satisfaction ~ Occupation * Country, data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Work + Satisfaction_Safety +
Satisfaction_Home + Satisfaction_Family +
Satisfaction_Material + Satisfaction_Friends,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friend +
Country,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Country,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Country,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Country,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Country,
data=D)
summary(fit)
fit <- aov(Satisfaction ~
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Country,
data=D)
summary(fit)
library(car)
install.packages('car')
car
libary(car)
library(car)
fit <- Anova(Satisfaction ~
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Country,
data=D)
model <- lm(Satisfaction ~
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Country,
data=D)
fit <- Anova(model, type='II')
summary(fit)
Anova(model, type='II')
model <- lm(Satisfaction ~
Satisfaction_Family + Satisfaction_Material + Satisfaction_Friends +
Satisfaction_Work + Satisfaction_Safety + Satisfaction_Home +
Country,
data=D)
Anova(model, type='II')
model <- lm(Satisfaction ~
Agree_FutureHope + Agree_NotRecognised + Agree_SecondClassCitizen +
Agree_DefendInterests + Agree_LookFromAbove + Agree_NoInfluence +
Country,
data=D)
Anova(model, type='II')
cor.test(D[ , 'Satisfaction'], D[ , 'NationalityScore'])
model <- lm(Satisfaction ~
Nat_TimeSpent + Nat_SocialGroups + Nat_Feeling +
Nat_Influence + Nat_Happiness + Nat_Belonging +
Nat_Importance + Nat_Speaking + Nat_Pride +
Nat_CulturalActivities + Nat_Attachment + Nat_Liking +
Country,
data=D)
Anova(model, type='II')
fit <- aov(Satisfaction ~ Country * TimeInCountry, data=D)
summary(fit)
fit <- aov(Satisfaction ~ TimeInCountry * Country, data=D)
summary(fit)
model <- lm(Satisfaction ~ TimeInCountry * Country, data=D)
Anova(model, type='II')
Anova(model, type='III')
model <- lm(NationalityScore ~ Age * Country, data=D)
Anova(model, type='II')
cor.test(D[ , 'NationalityScore'], D[ , 'Age'])
